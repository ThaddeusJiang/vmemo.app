name: Elixir CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vmemo_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      typesense:
        # ref: https://typesense.org/docs/guide/github-actions.html#option-2-without-dependencies
        image: typesense/typesense:27.1

    strategy:
      matrix:
        otp: ["27"]
        elixir: ["1.17.3"]
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    steps:
      - name: Start Typesense
        run: |
          docker run -d \
          -p 8108:8108 \
          --name typesense \
          -v /tmp/typesense:/data \
          typesense/typesense:27.1 \
          --api-key=xyz \
          --data-dir /data \
          --enable-cors

      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Install dependencies
        run: mix deps.get

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Set up database
        env:
          MIX_ENV: test
        run: |
          mix ts.setup
          mix ecto.setup

      - name: Wait for Typesense
        run: |
          until curl -s http://localhost:8108/health; do
            echo "Waiting for typesense..."
            sleep 1
          done

      - name: Run tests
        env:
          MIX_ENV: test
        run: mix test
