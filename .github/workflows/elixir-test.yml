name: Elixir CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vmemo_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      typesense:
        image: typesense/typesense:27.1
        ports:
          - "8765:8108"
        env:
          TYPESENSE_API_KEY: xyz
          TYPESENSE_DATA_DIR: /data
          TYPESENSE_ENABLE_CORS: "true"
        options: >-
          --health-cmd "curl -s -f http://localhost:8108/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        otp: ["27"]
        elixir: ["1.17.3"]
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Install dependencies
        run: mix deps.get

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 1
          done

      - name: Set up database
        env:
          MIX_ENV: test
        run: |
          mix ecto.create
          mix ecto.migrate

      - name: Run tests
        env:
          MIX_ENV: test
        run: mix test
